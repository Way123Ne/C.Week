		day02
			2017/3/5
Sun:视频学习
PART:C	
心得：
数组的分类：
	一维数组
	如何定义一维数组
			为n个变量连续分配内存空间
			所有的变量数据类型必须相同
			所有变量所占的字节大小必须相等

	例子：		
		int a[5];
	有关一维数组的操作
		初始化	
			完全初始化
				int a[5] = {1,2,4,6,3};
			不完全初始化，未被初始化的元素自动为零
				int a[5] = {12,3,5};
			不初始化，所有元素是垃圾值
				int a[5];	
		清零
			int a[5] = {0};
		错误写法：
		a)	int a[4];
			a[4] = {2,3,5,6};//错误
			只有在定义数组的同时才可以整体赋值
			其他情况下整体赋值都是错误的
		b)	int a[5] = {1,2,3,4,5};
			a[5] = 100; //error 因为没有a[5]这个元素，最大a[4]
		c) 	int a[5] = {21,3,5,6,7};
			int b[5];
			如果要把a数组中的值全部赋值给b数组
				错误的写法：		
					b = a; //error
				正确的写法：		
					for (i = 0; i < 5; ++i)
						b[i] = a[i];

	赋值
	排序
	求最大/小值
	倒置

*二维数组
	int a[3][4];
	总共是12个元素，可以当作3行4列，这12个元素的名字依次是
		a[0][0] a[0][1] a[0][2] a[0][3]
		a[1][0] a[1][1] a[1][2]	a[1][3]
		a[2][0] a[2][1] a[2][2]	a[2][3]
		int a[m][n];该二维数组右下角位置的元素只能是a[m-1][n-1]

	初始化数组：
	int a[3][4] = {
		{1,2,3,4},
		{5,6,7,8},
		{9,10,11,12}
	};
	int i, j;
	
	操作数组：
	//输出数组内容
	for (i = 0; i<3; ++i)
	{
		for (j = 0; j<4; ++j)
		{
			printf("%d ", a[i][j]);
		
		}
			printf("\n");
	}
	
*多维数组
	是否存在多维数组
		不存在
		因为内存是线性一维的	
		n为数组可以当作是每个元素是n-1维数组	
	比如：
		int a[3][5];
		该书组是含有3个元素的一维数组
		只不过每个元素都可以再分成5个小元素
		
		int a[3][2][6];
		该书组是含有3个元素的一维数组
		只不过每个元素都是2行6列的二维数组

		
	
	